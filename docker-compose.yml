version: "3.8"
services:
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports: ["8086:8086", "2003:2003"]
    volumes:
      - influxdb-data:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=loadmetrics
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_HTTP_AUTH_ENABLED=false
      - INFLUXDB_HTTP_BIND_ADDRESS=:8086
      - INFLUXDB_HTTP_LOG_ENABLED=true
      - INFLUXDB_GRAPHITE_ENABLED=true
      - INFLUXDB_GRAPHITE_DATABASE=loadmetrics
      - INFLUXDB_GRAPHITE_BIND_ADDRESS=:2003
      - INFLUXDB_GRAPHITE_PROTOCOL=tcp
      - INFLUXDB_GRAPHITE_BATCH_SIZE=1000
      - INFLUXDB_GRAPHITE_BATCH_PENDING=5
      - INFLUXDB_GRAPHITE_BATCH_TIMEOUT=1s
      - INFLUXDB_GRAPHITE_SEPARATOR=.

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports: ["3000:3000"]
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - influxdb

  postgres:
    image: postgres:16
    container_name: pg
    ports: ["5432:5432"]
    environment:
      - POSTGRES_USER=testops
      - POSTGRES_PASSWORD=testops
      - POSTGRES_DB=testdata
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./postgres/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql:ro

volumes:
  influxdb-data:
  grafana-data:
  pg-data:
